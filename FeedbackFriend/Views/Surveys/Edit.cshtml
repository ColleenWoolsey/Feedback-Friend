@model FeedbackFriend.Models.Survey

@{
    ViewData["Title"] = "Edit";
}

<h3>
    Edit Survey     |
    <a asp-action="LoggedIn">Back to List</a>
</h3>

<div class="row">
    <div class="col-md-12">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="SurveyId" />

            <div class="form-group">
                <label asp-for="SurveyName" class="control-label"></label>
                <input asp-for="SurveyName" class="form-control" />
                <span asp-validation-for="SurveyName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                @Html.TextArea("Description", null, new { @class = "form-control" })
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Instructions" class="control-label"></label>
                @Html.TextArea("Instructions", null, new { @class = "form-control" })
                <span asp-validation-for="Instructions" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Update Survey" class="btn btn-primary" />            
                <a asp-controller="Questions" asp-action="Edit"> | OR Update Survey and Edit Questions Next</a>
            </div>
            <div class="form-group">
                @*<div class="col-md-offset-2 col-md-10">*@
                <div class="col-md-10">
                    <table>
                        <tr>
                            @{
                                int cnt = 0;
                                List<FeedbackFriend.Models.SurveyQuestionsEDITViewModel> questions = ViewBag.Questions;

                                foreach (var question in questions)
                                {
                                    if (cnt++ % 1 == 0)
                                    {
                                    @:</tr><tr>
                                    }
                                    @:<td>
                                        @Html.DisplayFor(modelItem => question.QuestionText)
                                    @:</td>
                                    @*@:<td>
                                    <input type="checkbox"
                                           name="selectedCourses"
                                           value="@question.QuestionId"
                                           @(Html.Raw(question.Assigned ? "checked=\"checked\"" : "")) />
                                    @question.QuestionId @:  @question.QuestionText
                                @:</td>*@
                                }
                            @:</tr>
                            }
                        </table>
                    </div>
                </div>
            </form>
        </div>
    </div>


    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
